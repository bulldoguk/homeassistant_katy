- id: '1694143417202'
  alias: Master bedroom fan
  description: ''
  use_blueprint:
    path: bulldoguk/fan_control.yaml
    input:
      target_fan:
        entity_id: fan.master_bedroom_fan
      tuesday: true
      thursday: true
      friday: true
      temperature_source: weather.forecast_katy
      sunday: true
      monday: true
      wednesday: true
      saturday: true
      maximum_temperature: 90
      fixed_speed_start_time: '23:00:00'
      fixed_speed_end_time: 05:00:00
      fixed_speed_setting: 100
      minimum_temperature: 60
- id: '1694403973808'
  alias: Gary's office fan
  description: ''
  use_blueprint:
    path: bulldoguk/fan_control.yaml
    input:
      target_fan:
        device_id: 566de1754755fa1eee3dcce7c772f868
      monday: true
      tuesday: true
      wednesday: true
      thursday: true
      friday: true
      temperature_source: weather.forecast_katy
      minimum_temperature: 70
      maximum_temperature: 75
      sunday: false
      fixed_speed_start_time: '16:30:00'
      fixed_speed_end_time: 06:30:00
      fixed_speed_setting: 0
- id: '1695211997066'
  alias: Nicks alarm clock lights
  description: ''
  use_blueprint:
    path: bulldoguk/light_alarm_clock.yaml
    input:
      target_light:
        entity_id: light.nick_bedroom_light_light
      trigger_time: 05:15:00
      alarm_time: 05:30:00
      monday: true
      tuesday: true
      wednesday: true
      thursday: true
      friday: true
- id: '1696724340542'
  alias: Sunset lighting
  description: ''
  use_blueprint:
    path: bulldoguk/sunset_lighting.yaml
    input:
      target_lights:
        entity_id:
        - light.kitchen_1
        - light.kitchen_2
        - light.kitchen_3
        - light.kitchen_4
        - light.wiz_dimmable_white_99ba40
        - light.wiz_dimmable_white_9ab8d9
        - light.wiz_dimmable_white_a5dc2c
        - light.wiz_dimmable_white_a5dc75
        - light.wiz_tunable_white_19f009
        - light.bookcase_1
        - light.bookcase_2
        - light.game_room_light_1
        - light.game_room_light_2
      target_switches:
        entity_id:
        - switch.bed_light_socket
        - switch.garys_light_socket
        - switch.shannons_light_socket
        - switch.patio_light_switch_1
        - switch.entryway_light_switch_1
        - switch.mud_room_switch_1
        - switch.counter_switch_1
        - switch.kennel_switch_1
        - switch.nsp01_7_socket_1
        - switch.nsp01_8_socket_1
        - switch.yard_lights_socket_1
        - switch.china_hutch_socket_2
- id: '1696725343443'
  alias: Sunrise turn off main lights
  description: ''
  use_blueprint:
    path: bulldoguk/sunrise_lighting.yaml
    input:
      monday: true
      tuesday: true
      wednesday: true
      thursday: true
      friday: true
      saturday: true
      sunday: true
      target_lights:
        entity_id:
        - light.bookcase_1
        - light.bookcase_2
        - light.game_room_light_1
        - light.kitchen_1
        - light.kitchen_2
        - light.kitchen_3
        - light.kitchen_4
        - light.wiz_dimmable_white_99ba40
        - light.wiz_tunable_white_19f009
        - light.wiz_dimmable_white_a5dc75
        - light.wiz_dimmable_white_a5dc2c
        - light.wiz_dimmable_white_9ab8d9
        - light.game_room_light_2
        - light.wiz_tunable_white_e06e29
        - light.wiz_tunable_white_eb2d61
      target_switches:
        entity_id:
        - switch.patio_light_switch_1
        - switch.entryway_light_switch_1
        - switch.mud_room_switch_1
        - switch.breakfast_area_switch_1
        - switch.counter_switch_1
        - switch.family_room_light_socket
        - switch.sink_light_switch_1
        - switch.twigs_socket_2
        - switch.china_hutch_socket_2
        - switch.bed_light_socket
        - switch.dining_switch_1
        - switch.nsp01_7_socket_1
        - switch.nsp01_8_socket_1
        - switch.yard_lights_socket_1
- id: '1696725406092'
  alias: Sunrise - turn off master bedroom lights
  description: ''
  use_blueprint:
    path: bulldoguk/sunrise_lighting.yaml
    input:
      monday: true
      tuesday: true
      wednesday: true
      thursday: true
      friday: true
      sunday: true
      target_lights:
        entity_id:
        - light.wiz_dimmable_white_9ab8d9
        - light.wiz_dimmable_white_99ba40
      target_switches:
        entity_id:
        - switch.shannons_light_socket
        - switch.garys_light_socket
        - switch.bed_light_socket
- id: '1696940063384'
  alias: 'Shannon is up '
  description: ''
  trigger:
  - type: duration
    platform: device
    device_id: 2788f460d78f9837c2fef4644f09ec44
    entity_id: c39275c8f5d60d7d86c2267b108de851
    domain: sensor
    above: 5
  condition: []
  action:
  - service: notify.mobile_app_garys_iphone
    data:
      message: Shannon is brushing!
  mode: single
- id: '1701571950029'
  alias: Kitchen button automation
  description: ''
  trigger:
  - device_id: a15ba6b6f5e4be0073ef6ff0e1505dfe
    domain: zha
    platform: device
    type: remote_button_double_press
    subtype: remote_button_double_press
  - device_id: a15ba6b6f5e4be0073ef6ff0e1505dfe
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: remote_button_short_press
  - device_id: a15ba6b6f5e4be0073ef6ff0e1505dfe
    domain: zha
    platform: device
    type: remote_button_long_press
    subtype: remote_button_long_press
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ event == "single" }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ lights_status == "ON" }}'
          sequence:
          - service: light.turn_off
            target:
              entity_id: '{{ lights_all }}

                '
        - conditions:
          - condition: template
            value_template: '{{ lights_status == "OFF" }}'
          sequence:
          - service: input_select.select_option
            data:
              entity_id: input_select.kitchen_lighting_state
              option: Circadian
          - service: light.turn_on
            data:
              entity_id: '{{ lights_all }}'
    - conditions:
      - condition: template
        value_template: '{{ event == "hold" }}'
      sequence:
      - service: logbook.log
        data:
          name: Button press
          message: Button was long pressed {{ trigger.id }} - not implemented yet
    - conditions:
      - condition: template
        value_template: '{{ event == "double" }}'
      sequence:
      - service: logbook.log
        data:
          name: Button press
          message: Button was pressed {{ trigger.id }}
      - service: input_select.select_next
        data:
          entity_id: input_select.kitchen_lighting_state
      - service: light.turn_on
        data:
          entity_id: '{{ lights_all }}'
  variables:
    area: kitchen
    event: '{{ trigger.event.data.args.press_type }}'
    lights_all: '{# get a list of all lights in the selected area #} {{ expand(area_entities(area)
      | select(''match'', ''light'')) | map(attribute=''entity_id'') | list }}'
    lights_on: '{# filter the list to see if we have any lights already on #} {{ lights_all
      | select(''is_state'', ''on'') | list }}'
    lights_status: '{# if any light is on, this is ON, otherwise OFF #} {% if lights_on|length
      > 0 %} {{ ''ON'' }} {% else %} {{ ''OFF'' }} {% endif %}'
  mode: single
- id: '1702234808283'
  alias: Fan status testing
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 01476df15ae718af4e41fa8e75435fe5
    entity_id: d55ae5af0aa478129b752d10bef35be2
    domain: fan
  condition: []
  action:
  - service: logbook.log
    data:
      name: Master fan
      message: Master fan on
      entity_id: input_select.master_fan_state
  mode: single
- id: '1703453966221'
  alias: Family room fan
  description: ''
  use_blueprint:
    path: bulldoguk/fan_control.yaml
    input:
      target_fan:
        entity_id: fan.family_room_fan_2
      monday: true
      tuesday: true
      wednesday: true
      thursday: true
      friday: true
      saturday: true
      sunday: true
      fixed_speed_start_time: '23:00:00'
      fixed_speed_end_time: 04:00:00
      fixed_speed_setting: 50
      temperature_source: weather.forecast_katy
- id: '1704337741534'
  alias: System Circadian tester
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /10
  condition: []
  action:
  - service: logbook.log
    data:
      name: System circadian
      message: Running circadian tester
  mode: single
  variables:
    all_areas: "{% set areas = states\n  | selectattr('attributes.device_class', 'defined')
      \n  | map(attribute='entity_id')\n  | map('area_id') | unique | reject('none')
      | list %}\n{{ areas }}"
    circadian_areas: "{% set return_list = namespace(areas=[], status=[], result=[])
      %}\n{% for area in all_areas %}\n  {% set status_input = (expand(area_entities(area)
      | select('match', 'input_select.*_lighting_state')) | map(attribute=\"entity_id\")
      | list) %}\n  {% if status_input[0] is defined %}\n    {% if states(status_input[0]|string)
      == 'Circadian' %}\n      {% set return_list.areas = return_list.areas + [area]
      %}\n    {% endif %}\n  {% else %}\n    {% set return_list.areas = return_list.areas
      + [area] %}\n  {% endif %}\n{% endfor %}\n{{ return_list.areas }}"
    target_lights: "{% set lights = namespace(target_lights=[]) %}\n{% for area in
      circadian_areas %}\n  {% set lights.target_lights = lights.target_lights + (expand(area_entities(area)
      | select('match', 'light')) | selectattr('state','eq', 'on') | map(attribute='entity_id')
      | list) %}\n{% endfor %}\n{{ lights.target_lights }}"
    lights_dim_brightness: '{%- set lights_select = namespace(entities=[]) -%} {%-
      for i_entity in target_lights -%} {%- if state_attr(i_entity,''color_mode'')
      == ''brightness'' -%} {%- set lights_select.entities = lights_select.entities
      + [i_entity] -%} {%- endif -%} {%- endfor -%} {{ lights_select.entities }}'
    lights_dim_temperature: '{%- set lights_select = namespace(entities=[]) -%} {%-
      for i_entity in target_lights -%} {%- if state_attr(i_entity,''color_mode'')
      == ''color_temp'' -%} {%- set lights_select.entities = lights_select.entities
      + [i_entity] -%} {%- endif -%} {%- endfor -%} {{ lights_select.entities }}'
    lights_dim_color: '{%- set lights_select = namespace(entities=[]) -%} {%- for
      i_entity in target_lights -%} {%- if state_attr(i_entity,''color_mode'') in
      [''rgb'',''rgbw'',''rgbww'',''xy'',''hs''] -%} {%- set lights_select.entities
      = lights_select.entities + [i_entity] -%} {%- endif -%} {%- endfor -%} {{ lights_select.entities
      }}'
- id: '1705111811537'
  alias: lighting mode change
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.kitchen_lighting_state
    id: lighting_state
  - platform: state
    entity_id:
    - input_select.family_lighting_state
    id: lighting_state
  - platform: state
    entity_id:
    - input_select.gary_office_lighting_state
    id: lighting_state
  - platform: state
    entity_id:
    - input_select.hallway_lighting_state
    id: lighting_state
  condition:
  - condition: trigger
    id:
    - lighting_state
  action:
  - service: logbook.log
    metadata: {}
    data:
      name: lighting change {{ trigger.to_state.state }}
      domain: light
  mode: single
- id: '1705361162349'
  alias: nick light off
  description: ''
  trigger:
  - platform: time
    at: 07:00:00
  condition: []
  action:
  - service: light.turn_off
    metadata: {}
    data: {}
    target:
      device_id: 194e926b27c3fa61ae7e73d2a58218ac
  mode: single
- id: '1705373263732'
  alias: System Lighting ON mode
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  - platform: state
    entity_id:
    - input_select.family_lighting_state
    - input_select.hallway_lighting_state
    - input_select.kitchen_lighting_state
    - input_select.gary_office_lighting_state
    to: 'On'
  condition: []
  action:
  - service: logbook.log
    data:
      name: System circadian
      message: Running ON routine
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ lights_dim_brightness | length > 0 }}'
      sequence:
      - service: light.turn_on
        data:
          entity_id: '{{ lights_dim_brightness }}'
          brightness: 255
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ lights_dim_color | length > 0 }}'
      sequence:
      - service: light.turn_on
        data:
          entity_id: '{{ lights_dim_color }}'
          brightness_pct: 100
          hs_color:
          - '{{ states(''input_number.circadian_hue_value'') }}'
          - '{{ states(''input_number.circadian_saturation'') }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ lights_dim_temperature | length > 0 }}'
      sequence:
      - service: light.turn_on
        data:
          entity_id: '{{ lights_dim_temperature }}'
          brightness: 255
          color_temp_kelvin: 6500
  mode: single
  variables:
    all_areas: "{% set areas = states\n  | selectattr('attributes.device_class', 'defined')
      \n  | map(attribute='entity_id')\n  | map('area_id') | unique | reject('none')
      | list %}\n{{ areas }}"
    circadian_areas: "{% set return_list = namespace(areas=[], status=[], result=[])
      %}\n{% for area in all_areas %}\n  {% set status_input = (expand(area_entities(area)
      | select('match', 'input_select.*_lighting_state')) | map(attribute=\"entity_id\")
      | list) %}\n  {% if status_input[0] is defined %}\n    {% if states(status_input[0]|string)
      == 'On' %}\n      {% set return_list.areas = return_list.areas + [area] %}\n
      \   {% endif %}\n  {% endif %}\n{% endfor %}\n{{ return_list.areas }}"
    target_lights: "{% set lights = namespace(target_lights=[]) %}\n{% for area in
      circadian_areas %}\n  {% set lights.target_lights = lights.target_lights + (expand(area_entities(area)
      | select('match', 'light')) | selectattr('state','eq', 'on') | map(attribute='entity_id')
      | list) %}\n{% endfor %}\n{{ lights.target_lights }}"
    lights_dim_brightness: '{%- set lights_select = namespace(entities=[]) -%} {%-
      for i_entity in target_lights -%} {%- if state_attr(i_entity,''color_mode'')
      == ''brightness'' -%} {%- set lights_select.entities = lights_select.entities
      + [i_entity] -%} {%- endif -%} {%- endfor -%} {{ lights_select.entities }}'
    lights_dim_temperature: '{%- set lights_select = namespace(entities=[]) -%} {%-
      for i_entity in target_lights -%} {%- if state_attr(i_entity,''color_mode'')
      == ''color_temp'' -%} {%- set lights_select.entities = lights_select.entities
      + [i_entity] -%} {%- endif -%} {%- endfor -%} {{ lights_select.entities }}'
    lights_dim_color: '{%- set lights_select = namespace(entities=[]) -%} {%- for
      i_entity in target_lights -%} {%- if state_attr(i_entity,''color_mode'') in
      [''rgb'',''rgbw'',''rgbww'',''xy'',''hs''] -%} {%- set lights_select.entities
      = lights_select.entities + [i_entity] -%} {%- endif -%} {%- endfor -%} {{ lights_select.entities
      }}'
- id: '1707447092164'
  alias: Family light switch pressed
  description: ''
  trigger:
  - device_id: 31b0fd49e85555bea3aeb9498bb6719d
    domain: zha
    platform: device
    type: remote_button_double_press
    subtype: button_1
  - device_id: 31b0fd49e85555bea3aeb9498bb6719d
    domain: zha
    platform: device
    type: remote_button_short_press
    subtype: button_1
  - device_id: 31b0fd49e85555bea3aeb9498bb6719d
    domain: zha
    platform: device
    type: remote_button_long_press
    subtype: button_1
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ event == "remote_button_short_press" }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ lights_status == "ON" }}'
          sequence:
          - service: light.turn_off
            target:
              entity_id: '{{ lights_all }}

                '
        - conditions:
          - condition: template
            value_template: '{{ lights_status == "OFF" }}'
          sequence:
          - service: input_select.select_option
            data:
              entity_id: input_select.family_lighting_state
              option: Circadian
          - service: light.turn_on
            data:
              entity_id: '{{ lights_all }}'
    - conditions:
      - condition: template
        value_template: '{{ event == "hold" }}'
      sequence:
      - service: logbook.log
        data:
          name: Button press
          message: Button was long pressed {{ trigger.id }} - not implemented yet
    - conditions:
      - condition: template
        value_template: '{{ event == "remote_button_double_press" }}'
      sequence:
      - service: logbook.log
        data:
          name: Button press
          message: Button was pressed {{ trigger.type }}
      - service: input_select.select_next
        data:
          entity_id: input_select.family_lighting_state
      - service: light.turn_on
        data:
          entity_id: '{{ lights_all }}'
  - service: notify.persistent_notification
    metadata: {}
    data:
      message: Test step {{ event }}
  mode: single
  variables:
    area: family_room
    event: '{{ trigger.event.data.command }}'
    lights_all: '{# get a list of all lights in the selected area #} {{ expand(area_entities(area)
      | select(''match'', ''light'')) | map(attribute=''entity_id'') | list }}'
    lights_on: '{# filter the list to see if we have any lights already on #} {{ lights_all
      | select(''is_state'', ''on'') | list }}'
    lights_status: '{# if any light is on, this is ON, otherwise OFF #} {% if lights_on|length
      > 0 %} {{ ''ON'' }} {% else %} {{ ''OFF'' }} {% endif %}'
- id: '1712663172159'
  alias: MQTT testing
  description: ''
  trigger:
  - platform: mqtt
    topic: stat/tasmota_FD9EA5/RESULT
  condition: []
  action:
  - service: notify.persistent_notification
    metadata: {}
    data:
      title: MQTT message
      message: trigger.payload
  mode: single
